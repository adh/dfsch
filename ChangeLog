2006-12-08  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_try): finally support

2006-11-24  Ales Hakl  <ales at hakl dot net>

	* src/parse.c (parse_close): check that given state is valid for
	close paren.

2006-11-12  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_make_symbol): moved symbol table initialization 
	here.
	(gsh_check_init): removed locking and other unnecessary code
	(dfsch_eval_impl): propagate thread_info_t when recursing to self
	(eval_list): use dfsch_eval_impl instead of dfsch_eval
	(dfsch_eval_impl): propagate thread_info to eval_list

2006-11-11  Ales Hakl  <ales at hakl dot net>

	* src/hash.c (dfsch_hash_set): Synchronization of hash modifications

2006-11-05  Ales Hakl  <ales at hakl dot net>

	* src/hash.c (get_hash): Default hash function for all objects

2006-11-04  Ales Hakl  <ales at hakl dot net>

	* *: Removed concept of interpreter context

	* src/repl.c (main): -L option

	* lib/load.c (dfsch_load_scm): Searching for source files.

2006-10-26  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_try): restore continuation stack.
	(dfsch_try): removed unnecesary casts

2006-10-24  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_try): invalidate inner continuations
	Removed all occurencies of "volatile" (it's unnecessary)

2006-10-22  Ales Hakl  <ales at hakl dot net>

	* src/number.c (dfsch__number_native_register): derive value of pi
	from math library (pi = 4*arctan 1)
	(native_exp): exp without arguments returns e

2006-10-21  Ales Hakl  <ales at hakl dot net>

	* scm/test.scm (strings): Some tests for strings.
	(*utf8*): utf-8 related tests 

	* src/dfsch.c (dfsch_apply_impl): typeless-value can be applied
	and evaluates to empty list (quite useless feature)
	(dfsch_apply_impl): apply_impl is internal implementation
	function, therefore should be static

	* src/native.c (native_reduce): More Common Lisp like reduce.

2006-10-20  Ales Hakl  <ales at hakl dot net>

	* src/native.c (native_reduce): reduce function

	* src/number.c (dfsch_make_number_from_long): Smallnums allocated
	on heap

	* lib/regex.c (dfsch_regex_substrings): Dereferencing
	uninitialized pointer leads to undefined behavior :)

2006-10-15  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h (DFSCH_SYMBOL_CACHE): macro for defining symbol
	caching functions

	* src/dfsch.c (dfsch_eval_proc_impl): Added thread specific data 
	caching (I expect some performance gain from this, because
	get_thread_info() is (should be) slow)

2006-10-12  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (main): VERSION -> PACKAGE_VERSION (some versions of 
	something needs this)

2006-10-08  Ales Hakl  <ales at hakl dot net>

	* lib/regex.c: Throw exception when passed () instead of compiled 
	regex

	* src/dfsch.c (dfsch_list_p): list? function

2006-10-07  Ales Hakl  <ales at hakl dot net>

	* src/native.c (native_filter): filter function

2006-10-05  Ales Hakl  <ales at hakl dot net>

	* lib/regex.c (native_regex_substrings_once): removed REG_NOSUB

	* scm/test.scm (substrings-once): Additional test 

	* lib/regex.c: split core from code handling wrapper objects.
	Simple functions without need for compilation

	* scm/test.scm ("Regular expressions"): Tests for regex module

	* lib/regex.c (dfsch_regex_substrings): Fixed buffer overflow

	* src/repl.c (main): integrated regular expressions

	* lib/regex.c (dfsch_regex_substrings): substring matches

2006-10-04  Ales Hakl  <ales at hakl dot net>

	* lib/threads.c (dfsch_threads_register): Fixed prototypes of 
	finalizers

	* lib/regex.c (dfsch_regex_register): Simple (match/no match) regular 
	expression support... and now with code :)
	(regex_finalizer): finalization of regex objects

	* scm/supermarket.scm: Exit after predefined number of iterations, 
	do not loop forever

2006-09-20  Ales Hakl  <ales at hakl dot net>

	* configure.ac (USE_READLINE): Removed redundant chcek for use_readline

	* TODO: Reordered to match priority

	* lib/: Moved standalone libraries to separate directory. 

2006-08-13  Ales Hakl  <ales at hakl dot net>

	* scm/test.scm: Some more tests

2006-08-12  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_eqv_p): Handle the NULL case.

2006-08-06  Ales Hakl  <ales at hakl dot net>

	* src/native_cxr.c: nested accessors for pairs

2006-07-17  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_apply_tr): Optimize tail calls even thru
	custom applicable types
	(dfsch_call_ec): continuations as distinct type
	(continuation_apply): check for continuations passed between threads
	(dfsch_evla_tr): clear break_type after handling it.

	* src/wrapper.c (dfsch_make_wrapper_type): Wraper object for
	building custom data types from scheme code

	* src/dfsch.c (dfsch_apply_tr): reordered checks - primitives are
	provably called more often than closures

	* dfsch/dfsch.h (dfsch_type_t): apply method for user-defined
	applicable objects

2006-07-16  Ales Hakl  <ales at hakl dot net>

	* src/hash.c (dfsch_hash_2_alist): alist->hash

2006-07-15  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_exception_write): Better stacktraces
	(containing processed forms)
	(dfsch_exception_write): Minor formating changes

	* src/threads.c (dfsch_channel_read): Erase readed items from buffer

	* src/dfsch.c (dfsch_break): signal-safe exceptions

	* src/threads.c (dfsch_thread_detach): Aehm... missing assignment

	* scm/supermarket.scm: Some example code for multithreading

	* src/threads.c (dfsch_channel_create): Channels (which seems like
	preferable method of communication between threads)

2006-07-14  Ales Hakl  <ales at hakl dot net>

	* src/threads.c (dfsch_condition_create): Condition variables

2006-07-13  Ales Hakl  <ales at hakl dot net>

	* src/threads.c: Mutexes (non-working)
	(dfsch_mutex_*): added asignments to m (this is why it didn't work) 

	* src/dfsch.c (dfsch_call_ec): Removed volatile (there is no
	reason for it to be there, probably)
	(dfsch_eval_proc_tr): dtto.

	* src/number.c (dfsch_number_to_string): added cast to number_t*

	* src/threads.c: Multithreading support (or something like that)

2006-06-18  Ales Hakl  <ales at hakl dot net>

	* dfsch/*.h: Added documentation comments

2006-06-11  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h: Added documentation comments to argument macros

	* *: Removed all references of dfsch_make_string() and dfsch_string()

2006-06-07  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h: Updated doxygen tags

2006-06-04  Ales Hakl  <ales at hakl dot net>

	* dfsch_list_length_check used almost anywhere where makes sense

	* src/strings.c (dfsch_list_2_string): use dfsch_list_length_check

	* src/dfsch.c (dfsch_list_length): Detect infinite lists
	(pair_write): Detect infinite lists
	(dfsch_list_length_check): Function with semantics similar to
	length in scheme - return length of given list, throw exception
	for anything else. Compiles now.
	(dfsch_list_2_vector): use dfsch_list_length_check

2006-06-03  Ales Hakl  <ales at hakl dot net>

	* src/number.c (dfsch_number_to_string): Number-specific write
	function
	(native_.*_2_.*): convert string to number and other way

2006-05-21  Ales Hakl  <ales at hakl dot net>

	* src/number.c: Rounding functions

2006-05-20  Ales Hakl  <ales at hakl dot net>

	* src/strings.c (dfsch_list_2_string): Fixed some warnings

	* src/dfsch.c: Fixed some warnings introduced by GC'd symbols
	Fixed some other warnings

	* src/parse.c (dispatch_atom): Allow numbers with leading +

	* src/dfsch.c: Fixed bug in string_hash
	(symbol_finalizer): GC'd symbols

2006-05-19  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_form_p): form? type predicate

	* dfsch/dfsch.h: Correct declarations in header for new list functions
	Corrected other broken headers.

	* src/dfsch.c (dfsch_reverse): list reversal function
	(dfsch_mem*) Membership checking functions

	* scm/test.scm: More tests

	* src/hash.c (native_make_hash): mode argument was ignored

	* src/number.c, dfsch/number.h: Comparison functions reimplemented 
	(native_max, native_min): max and min functions

	* src/number.c (native_even_p, native_odd_p): even? and odd?
	(dfsch__number_eqv_p): eqv? works correctly

	* scm/test.scm: Naming change

	* src/control.c (native_form_do): do iteration form

2006-05-18  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_obj_write): Better support for platforms with
	>32b word
	(closure_write): dtto.

	* src/number.c (native_acos, native_asin): inverse trigonometrics
	(native_atan): arcus tangent
	(native_sqrt): Square root
	(native_expt): Power (expt)
	(native_zero_p, native_positive_p, native_negative_p): some basic
	predicates

2006-05-17  Ales Hakl  <ales at hakl dot net>

	* src/number.c (native_log): Natural logarithm
	(native_tan, native_cos, native_sin): Trigonometric functions

	* src/strings.c: Added DFSCH_ARG_END to mark ends of argument lists

	* src/number.c (native_abs): Absolute value function
	(native_exp): Exponent

	* NEWS: Release 0.2.0-pre2

2006-05-14  Ales Hakl  <ales at hakl dot net>

	* {dfsch,src}/parse.[hc]: Renamed from stream.[ch] to parse.[ch]

	* src/control.c (native_macro_case): slightly simplified
	when and unless macros

2006-05-13  Ales Hakl  <ales at hakl dot net>

	* scm/lib.scm (define-struct): Defaulting of slot values
	(define-struct): Indicate slot name for unknown slots

2006-05-12  Ales Hakl  <ales at hakl dot net>

	* scm/lib.scm (define-struct): Structures (preliminary)

	* src/native.c: for-each and map functions
	map works

2006-05-08  Ales Hakl  <ales at hakl dot net>

	* src/native.c: string->symbol and symbol->string

	* src/object.h (TYPE_CHECK): check for nil

	* src/native.c: string->object and object->string

2006-05-01  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h (DFSCH_DISCARD_ARG): Macro for unneeded arguments
	(like env in some macros/forms)

	* src/control.c (dfsch__control_register): split native.c to
	native and control.

	* src/native.c (native_form_let): named-let construct

2006-04-23  Ales Hakl  <ales at hakl dot net>

	* src/stream.c (tokenizer_process): create true object from cache

	* src/dfsch.c: Removed static declaration of ascii_strcasecmp

	* src/stream.c (tokenizer_process): Special case for unreadable objects

	* src/number.c (dfsch_make_number_from_string): At least some
	support for non-decimal numbers

	* src/stream.c (tokenizer_process): support for boolean and
	character escapes
	(tokenizer_process): case insensitive character names
	(dispatch_atom): Signal error on invalid number

2006-04-22  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c: tail escape descriptor should (probably) be
	declared volatile

	* src/strings.c: rename utf8-substring to substring-utf8
	Removed debugging code
	Fixed some warnings

2006-04-19  Ales Hakl  <ales at hakl dot net>

	* src/strings.c (string_write): Better string escaping.
	(dfsch_list_2_string_utf8): list->string-utf8 function
	(utf8_ref_cb): Fixed.

2006-04-18  Ales Hakl  <ales at hakl dot net>

	* src/strings.c: Escape all characters < 32, list->string function

2006-04-17  Ales Hakl  <ales at hakl dot net>

	* src/strings.c (dfsch_string_2_list): string->list function
	(dfsch_string_utf8_2_list): string-utf8->list function

	* src/dfsch.c (string_hash): Slightly simplified
	(lookup_symbol): Faster and locale independent lookup

2006-04-16  Ales Hakl  <ales at hakl dot net>

	* doc/dfsch-repl.1: manpage for dfsch-repl
	Correct formating of SEE ALSO section

2006-04-15  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (interactive_repl): non-readline REPL

	* src/load.c (dfsch_read_scm_stream): last character is
	strlen()-1, strlen() is final NUL

	* src/native.c (native_id): return unique id (memory address) of
	given object

	* configure.ac: Correct handling of arguments (autoconf is magic)

2006-04-09  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_unintern): Compare object pointers, not data 

	* src/number.c (dfsch_make_number_from_long): Internation of small
	numbers 

2006-03-20  Ales Hakl  <ales at hakl dot net>

	* scm/test.scm (exit-func): Better formatting of output (probably)
	(one-test-fail): Works correcrtly

	* src/repl.c (command_print): Less ugly print function

	* scm/test.scm (exit-func): Slightly modified testsuite
	Use strings instead of symbols in output

	* dfsch/number.h: prototypes for arithmetic routines

2006-03-19  Ales Hakl  <ales at hakl dot net>

	* src/number.c: Better formating of numbers

	* many places: Removed old number API calls
	(dfsch_number()/dfsch_make_number())  

	* src/number.c (dfsch_make_number_from_double): New way of parsing
	numbers - discriminate between fixnum and flonum
	(n_equal_p): support for comparing different numeric types
	(NUMBER_BINOP): First try at type-aware numeric operators 
	(native_slash_i): /i function for integer division

	* src/dfsch.c (dfsch_call_ec): Continuations moved to dfsch.c and
	improved a bit.

2006-03-18  Ales Hakl  <ales at hakl dot net>

	* src/number.c: Fixnum support (unused for now)

2006-03-15  Ales Hakl  <ales at hakl dot net>

	* src/stream.c: Support for empty vectors

	* src/dfsch.c: Better formating of exceptions.

2006-03-14  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c: Stack traces
	(closure_write): Print closure's name

2006-03-12  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (sigill_handler_break): Handle SIGILL as exception 
	(BEWARE OF THE HACK)

2006-02-12  Ales Hakl  <ales at hakl dot net>

	* src/strings.c (dfsch_string_utf8_for_each): user selectable
	handling of invalid bytes in utf-8 string

	* dfsch/dfsch.h: Removed remains of DFSCH_THROW

2006-02-11  Ales Hakl  <ales at hakl dot net>

	* src/strings.c (dfsch_string_utf8_length): Length calculation
	function for utf-8 strings 
	(dfsch_string_utf8_length): Fixed bad constant
	(dfsch_string_utf8_ref): string-ref for utf-8 strings
	(dfsch_string_utf8_substring): substring for utf-8 strings
	Better handling of invalid bytes and sequences in utf-8
	(dfsch_string_utf8_for_each): Generalized UTF-8 handling
	(dfsch_string_for_each): Iteration over raw strings
	Fixed some warnings and logic bugs

2006-02-09  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h: removed DFSCH_THROW

2006-02-08  Ales Hakl  <ales at hakl dot net>

	* dfsch/strings.h (dfsch_string_substring): Added declarations of
	added functions to header file

	* src/strings.c (dfsch_string_length): Return length of list
	(dfsch__string_native_register): Full set of string comparison
	predicates
	(native_substring): substring function

2006-02-07  Ales Hakl  <ales at hakl dot net>

	* dfsch/dfsch.h (DFSCH_GENERIC_ARG): generic argument handling macros 

	* src/strings.c (dfsch_string_list_append): Generic string append
	function.

2006-01-29  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (main): indented option help a bit

	* dfsch/dfsch.h: Added readable parameter (discrimining between
	write and display)

	* src/repl.c (esc): Added last argument to functions defined in
	repl.c 

2006-01-28  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (sigint_handler_break): Handle C-C while evaluating
	as user break.
	(sigint_handler_rl): C-c in readline works in more sane way

2006-01-27  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (noninteractive_repl): Handle input from something
	that is not a terminal gracefuly

	* src/dfsch.c (lambda_extend): Fixed misbehaving lambda_extend for
	functions with variable number of srguments called without any
	arguments 
	(dfsch_raise): Thread safe exception handling
	(dfsch_make_symbol): Thread safe symbols
	(dfsch_eval_tr): Marginal performance hack

	* src/native.c (native_form_defined_p): Fixed defined? to work
	with new wxception system

	* src/hash.c (GET_HASH): Recognize nils as not being valid hash
	table objects

	* src/dfsch.c (dfsch_unintern): uninterning of symbols

	* src/native.c: Removed duplicated code

	* src/number.c: Moved number native functions to number.c

	* src/native.c: escape argument to native functions
	(native_eval): eval, apply and eval-proc are properly tail-recursive
	(native_form_let_seq): Properly tail recursive
	(native_form_letrec): Properly tail recursive
	(native_form_let): Properly tail recursive

	* src/load.c: escape argument to native functions

	* src/promise.c: escape argument to native functions

	* src/hash.c: escape argument to native functions

	* src/dfsch.c (dfsch_apply_tr): Support for tail recursive native
	functions.

	* scm/test.scm (degeneratedList): Test for special case of quasiquote

	* src/dfsch.c (dfsch_append): append accepts empty lists as
	arguments.

	* src/native.c (native_gensym): gensym function

	* src/dfsch.c (dfsch_gensym): gensyms (unique symbols)

2006-01-26  Ales Hakl  <ales at hakl dot net>

	* configure.ac: Do not add -lreadline to LIBS

	* src/strings.c: Fixed some warnings

	* src/promise.c: Fixed some warnings

	* src/hash.c: Fixed some warnings

	* src/dfsch.c: Fixed some warnings
	All warnings fixed

	* scm/test.scm (v): Test for vector manipulation

2006-01-25  Ales Hakl  <ales at hakl dot net>

	* src/native.c (dfsch_native_register): assq, assv in scheme

	* src/dfsch.c (dfsch_assq, dfsch_assv): Other variants of assoc 
	(dfsch_assv): Fixed

	* src/strings.c (string_equal_p): Fixed string comparison function

	* src/hash.c: Multiple options of comparison for hash tables

	* src/promise.c: Moved promise and stream primitives to separate file

	* src/hash.c (dfsch__hash_native_register): Moved hash primitives
	to separate file

	* src/internal.h: Header file for internal functions (i.e. Native
	function registration)

	* src/dfsch.c (dfsch_vector_2_list): Fixed segfaults in list->vector
	(type definitions): Made types' methods static 
	(vector_equal_p): Vector comparison
	(vector_write): Vector writer
	(dfsch_obj_write): Removed unused parts of code
	(dfsch_make_object): Optional logging of object creations

	* New way of handling objects in memory 

2006-01-23  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c: Fixed various warnings about type safety and undefined
	functions

	* dfsch/dfsch.h: Fixed tzpos in argument proocessing macros

	* src/strings.c: New handling of strings is working

2006-01-22  Ales Hakl  <ales at hakl dot net>

	* dfsch/strings.h: We should be able to create empty strings

2006-01-05  Ales Hakl  <ales at hakl dot net>

	* dfsch/strings.h: Some basic idea of API.

	* src/strings.c dfsch/strings.h: Files for new implementation of
	string handling

2005-12-25  Ales Hakl  <ales at hakl dot net>

	* src/native.c (native_hash_unset): hash-unset acessible to scheme
	code 

	* src/hash.c (dfsch_hash_unset): Deleting keys and shrinking of 
	hash-tables

	* src/native.c: Promises avaiable as native functions
	(native_form_cons_stream): Streams avaiable as native functions
	(native_form_stream_*): Renamed to match SRFI 40 

	* dfsch/hash.h: Documentation update

	* src/promise.c: Promises

2005-12-20  Ales Hakl  <ales at hakl dot net>

	* src/object.h: Moved dfsch_object_t definition into separate
	reusable file 

2005-12-19  Ales Hakl  <ales at hakl dot net>

	* configure.ac: Bumped version number to 0.2.0-pre1

2005-12-18  Ales Hakl  <ales at hakl dot net>

	* src/native.c (native_call_ec): Escape continuations
	(native_raise, native_error, native_abort ...): Exception wrappers 

2005-12-17  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c: Removed checks for exception datatype

	* src/repl.c: Adapted for new exceptions.

	* src/dfsch.c (dfsch_raise): Escape continuations based exceptions
	(dfsch_try): Removed debug hooks

	* src/native.c (native_string_append): string-append for arbitrary
	number of arguments

	* src/dfsch.c (eval_proc_impl): Tail recursion support

2005-12-05  Ales Hakl  <ales at hakl dot net>

	* src/native.c (native_eval_proc): eval-proc is avaiable to scheme code
	(native_modulo) modulo (%) operator

2005-11-29  Ales Hakl  <ales at hakl dot net>

	* src/repl.c: Support for logging of executed forms

2005-11-20  Ales Hakl  <ales at hakl dot net>

	* scm/test.scm: Extended test suite 

	* tests/scm-test.sh, Makefile.am: integrated test suite into build
	process  

	* src/native.c (native_vector_length): Fixed bug concerning type
	identification 

	* src/repl.c (main): argv variable

	* src/native.c (native_macro_cond): Support for alternate form
	with "=>"

	* src/dfsch.c (dfsch_assoc): assoc works correctly

	* src/native.c: assoc and listref native functions 

2005-11-19  Ales Hakl  <ales at hakl dot net>

	* src/repl.c (main): Use dfsch_exception_write() consistently

	* src/dfsch.c (dfsch_eval_proc): Propagate exceptions correctly

	* src/stream.c: Cleaned up vector (and other special values) handling

	* src/native.c: Non-comutative number operators behaves correctly

	* scm/test.scm (condAlt): Updated to match dfsch's notion of booleans

2005-11-18  Ales Hakl  <ales at hakl dot net>

	* src/stream.c (dispatch_string): Hexadecimal string escapes.
	
	* src/stream.c, src/util.c: Include correct header for string functions

	* src/native.c (native_vector_length): Test for datatype
	
2005-11-17  Ales Hakl  <ales at hakl dot net>

	* src/load.c (dfsch_read_scm_*): handle invalid syntax correctly

	* src/dfsch.c (dfsch_list_read): handle invalid syntax correctly

	* src/repl.c (main): Evaluate expression from command line, -i option

	* src/dfsch.c (dfsch_obj_write_exception): Pretty-printing exceptions

	* src/load.c (dfsch_read_scm_*): Detect unclosed S-expressions 

	* src/repl.c (main): dfsch-repl is now usable as interpreter in
	shebang 

	* scm/test.scm: Test for interpreter

	* src/dfsch.c (lambda_extend): FIXED: extending new frames behaved
	wildly 

	* src/hash.c (dfsch_hash_2_alist): Routine for converting hash
	tables into association lists

	* src/repl.c (command_print): Ad-hoc printing mechanism in
	commandline interpreter

	* src/native.c (native_macro_case): "case" construct (see 4.2.1 of
	R5RS) 

	* src/dfsch.c (dfsch_eval_proc): Comment describing ways to
	implement tail-recursion

2005-11-16  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_new_frame, dfsch_lookup, dfsch_define,
	dfsch_set): Hash-table based environment frames 

	* src/hash.c (dfsch_hash_set_if_exists): Performance hack:
	hash-set-if-exists! 

	* src/native.c (native_form_let, native_form_letrec, 
	native_form_let_seq): All three variants of let, implemented using
	environment manipulation functions from dfsch.c

	* src/dfsch.c: Moved all (probably) manipulations of environment
	into one place.

	* src/native.c (native_macro_if): Reimplemented "if" to support
	both forms mentioned in R5RS

	* src/hash.c (hash_t): Native representation of hash tables

	* src/native.c (native_form_or, native_form_and): Working forms
	"or" and "and"

	* src/hash.c: Hash implementation on top of scheme objects

	* dfsch/hash.h: Hash data type

	* src/dfsch.c (dfsch_vector): varargs constructor for vectors

	* FIXED various warnings throghout the code.

	* src/dfsch.c (dfsch_make_form, dfsch_make_macro): Cleaned up
	terminology:
	     flow-macro -> macro
	     macro -> special-form

2005-11-15  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_append): Fixed seg-fault when appending nothing.
	(dfsch_define): Fixed growth of top-level env. when redefining

	* src/util.c: Moved utility functions to separate source file

	* src/native.c (dfsch_native_register): Moved native functions
	into separate source file.

2005-11-14  Ales Hakl  <ales at hakl dot net>

	* src/stream.c (parse_vector): Vector support

	* dfsch/dfsch.h (DFSCH_*ARG*): Argument helpers for native functions 

	* src/dfsch.c: In-core representation of vectors 
	Removed expression parser code from dfsch.c
	(dfsch_define): Allow redefining on top-level
	Vector datatype support

2005-11-07  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (string_hash): Another string hashing function

	* bootstrap.sh: Added autoheader

2005-11-06  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_ctx_define): Works like scheme's define
	i.e. fails when variable is already defined in current environment

	* configure.ac: Support for config.h
	
2005-10-30  Ales Hakl  <ales at hakl dot net>

	* src/load.c (dfsch_load_so): Binary modules loading support

2005-09-03  Ales Hakl  <ales at hakl dot net>

	* configure.ac: Added option for profiling (need to be used in 
	conjunction with --disable-shared)

2005-08-16  Ales Hakl  <ales at hakl dot net>

	* src/load.c (dfsch_read_scm_stream): BUGFIX: Correct counting of 
	lines longer then 8KiB

2005-08-14  Ales Hakl  <ales at hakl dot net>

	* Makefile.am (libdfsch_load_la_LIBADD): Explicitly link libdfsch

	* src/dfsch.c: Added eval and apply primitives
	(dfsch_make_context): added top-level-environment function
	(dfsch_make_context): Renamed env to current-environment

	* src/load.c (dfsch_load_scm_fd): Split core from dfsch_load_scm
	into separate function
	(dfsch_load_scm_stream): stdio streams based version (aware of
	line numbers)
	(dfsch_load_scm_...): Better error reporting 
	(load_callback): Generalized the thing - now  it's posible to load
	data by same code as is used for loading code.

	* dfsch/load.h: Added include guard

	* src/repl.c (command_exit): (exit) in interactive interpreter
	(requested by Pavel Kacha)

	* configure.ac: Check for some basic functions in libc
	Check for readline.

	* Makefile.am (dfsch_repl): Name clash between includes directory
	and interpreter binary. 

	* configure.ac: Check for gc.h and -lgc

2005-08-13  Ales Hakl  <ales at hakl dot net>

	* src/dfsch.c (dfsch_obj_write): Write out names of closures.

	* src/stream.c (consume_queue): Added one debugging output

	* src/dfsch.c (make_symbol): Similar problem in symbol handling

	* src/stream.c (dfsch_parser_create): BUGFIX: parser context
	wasn't garbage collected -> various parts of it (esp. input
	buffer) was blown away by collector considering it to be
	unreachable (this shoul hopefully fix some of SEGVs when using
	large heap)

2005-08-11  Ales Hakl  <ales at hakl dot net>

	* ChangeLog: reformated old entries to match style of new ones (to
	some extent)
	
	* README: Added paragraph about interactive interpreter

	* NEWS: Removed contents, it needs to have some system instead of
	current chaos (absolute chaos)

	* ChangeLog: added old entries from svn's ChangeLogs

	* src/repl.c: Added support for loading code on runtime

	* src/load.c: Renamed import to load
	Moved loading of scheme code from repl.c to load.c

	* src/repl.c: Readline TAB completion for scheme symbols
	(main): Cleaned up indentation support a bit

2005-08-10  Ales Hakl  <ales at hakl dot net>

	* Makefile.am: Moved libdfsch specific shared libraries to
	libdfsch_la_LIBADD.

2005-08-06  Ales Hakl  <ales at hakl dot net>

	* src/repl.c: Fixed race condition in SIGINT handling.

2005-08-05  Ales Hakl  <ales at hakl dot net>

	* src/stream.c, src/repl.c: Automatic indenting of interactive
	interpreter prompts

	* src/dfsch.c: Some basic support for features like symbol
	completion

2005-07-10  Ales Hakl  <ales at hakl dot net>
  
	* src/dfsch.c: Calculate hash size correctly from macros
  
  
2005-06-23  Ales Hakl  <ales at hakl dot net>
  
	* Makefile.am: removed targets and dependencies of dsc
  
  
2005-06-23  Ales Hakl  <dfox at users dot sourceforge dot net>
  
	* dsc: Removed from trunk branch (this thing is not interesting) 
  
  
2005-06-23  Ales Hakl  <ales at hakl dot net>
  
	* src/dfsch.c: Added PI constant
  
2005-05-25  Ales Hakl  <ales at hakl dot net>
  
	* Basics of scheme compiler.
  
2005-05-22  Ales Hakl  <ales at hakl dot net>
  
	* First phase of modularization - header for module for 
	importing modules
  
2005-05-22  Ales Hakl  <ales at hakl dot net>
  
	* Removed stream_repl.c
  
2005-05-22  Ales Hakl  <ales at hakl dot net>
  
	* dfsch_ctx_lookup() function
  
2005-05-22  Ales Hakl  <ales at hakl dot net>
  
	* Added missing implementation of dfsch_nil().
	* Tests directory.
  
2005-05-22  Ales Hakl  <ales at hakl dot net>
  
	* Minor cleanups
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* ...
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* Removed debugging hooks
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* Stream parser fixes
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* Fixed weird behaviour of parser when processing '
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* reworked REP loop
	* dfsch_ctx_lambda() function
	* DFSCH_RETHROW() macro
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* BUGFIX: let works correctly now
	* Added some documentation here and there
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* Reworked error-handling
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* count_list renamed to list_length
  
2005-05-15  Ales Hakl  <ales at hakl dot net>
  
	* DFSCH_THROW() and dfsch_throw() for better exception handling.
	* dfsch_list_item() and dfsch_count_list()
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* dfsch_bool()
	* Minor hacks
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Fixed configure
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Fixed include files
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Release 0.1
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Minor text files modifications
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* NEWS and README
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Minor pre-dist modifications
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Better exception handling
	* New functions
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Cleaned it up a bit
  
2005-05-14  Ales Hakl  <ales at hakl dot net>
  
	* Symbol hashing
  
2005-05-03  Ales Hakl  <ales at hakl dot net>
  
	* This works on debian (and probably only on debian)
  
2005-05-02  Ales Hakl  <ales at hakl dot net>
  
	* Usual `buildhere' directory
  
2005-05-02  Ales Hakl  <ales at hakl dot net>
  
	* This should maybe work (libtool is black magic)
  
2005-05-02  Ales Hakl  <ales at hakl dot net>
  
	* Transition to autotools, phase 1.
  
2005-05-02  Ales Hakl  <ales at hakl dot net>
  
	* Minor stability related fixes.
  
2005-04-11  Ales Hakl  <ales at hakl dot net>
  
	* Makefile update for fscking debian
  
2005-03-18  Ales Hakl  <ales at hakl dot net>
  
	* redefining symbol yields error
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* Removed declaration of dfsch_parser_destroy() - handled by gc now
  
	* Reindented header files
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* Fixed what was broken by gc update.. etc. etc.
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* minor gc fixes
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* Native data support (untested)
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* minor optimalizations
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* Boehm's conservative garbage collector instead of that ugly hack.
  
2005-03-16  Ales Hakl  <ales at hakl dot net>
  
	* Minor fixes around gc.
	* Documentation fixes
  
2005-03-15  Ales Hakl  <ales at hakl dot net>
  
	* Error reporting
  
2005-03-15  Ales Hakl  <ales at hakl dot net>
  
	* Eent driven parser is working - but doesn't detect any errors
  
2005-03-14  Ales Hakl  <ales at hakl dot net>
  
	* Event driven tokenizer
  
2005-03-10  Ales Hakl  <ales at hakl dot net>
  
	* Fixed infinite loop in parser code
  
2005-03-06  Ales Hakl  <ales at hakl dot net>
  
	* string-append in standard functions
  
2005-03-06  Ales Hakl  <ales at hakl dot net>
  
	* Morse code example
  
2005-02-26  Ales Hakl  <ales at hakl dot net>
  
	* Fixed fatal bug in try
  
2005-02-26  Ales Hakl  <ales at hakl dot net>
  
	* Bugfix - multiple comments in a row should not cause problems anymore
  
2005-02-26  Ales Hakl  <ales at hakl dot net>
  
	* Exception support
  
2005-02-25  Ales Hakl  <ales at hakl dot net>
  
	* ObjectFramework + accopanying bugfixes
  
2005-02-25  Ales Hakl  <ales at hakl dot net>
  
	* New primitives
  
2005-02-25  Ales Hakl  <ales at hakl dot net>
  
	* C++ support
  
2005-02-24  Ales Hakl  <ales at hakl dot net>
  
	* Removed clutter
  
2005-02-24  Ales Hakl  <ales at hakl dot net>
  
	* Initial import
  
